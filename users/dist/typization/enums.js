"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routes = exports.PassportStrategies = exports.NodeEnvs = exports.ResponseStatus = exports.ErrorMessages = exports.ResponseMessages = exports.ModelScopes = exports.HttpStatus = void 0;
var HttpStatus;
(function (HttpStatus) {
    HttpStatus[HttpStatus["CONTINUE"] = 100] = "CONTINUE";
    HttpStatus[HttpStatus["SWITCHING_PROTOCOLS"] = 101] = "SWITCHING_PROTOCOLS";
    HttpStatus[HttpStatus["PROCESSING"] = 102] = "PROCESSING";
    HttpStatus[HttpStatus["EARLYHINTS"] = 103] = "EARLYHINTS";
    HttpStatus[HttpStatus["OK"] = 200] = "OK";
    HttpStatus[HttpStatus["CREATED"] = 201] = "CREATED";
    HttpStatus[HttpStatus["ACCEPTED"] = 202] = "ACCEPTED";
    HttpStatus[HttpStatus["NON_AUTHORITATIVE_INFORMATION"] = 203] = "NON_AUTHORITATIVE_INFORMATION";
    HttpStatus[HttpStatus["NO_CONTENT"] = 204] = "NO_CONTENT";
    HttpStatus[HttpStatus["RESET_CONTENT"] = 205] = "RESET_CONTENT";
    HttpStatus[HttpStatus["PARTIAL_CONTENT"] = 206] = "PARTIAL_CONTENT";
    HttpStatus[HttpStatus["AMBIGUOUS"] = 300] = "AMBIGUOUS";
    HttpStatus[HttpStatus["MOVED_PERMANENTLY"] = 301] = "MOVED_PERMANENTLY";
    HttpStatus[HttpStatus["FOUND"] = 302] = "FOUND";
    HttpStatus[HttpStatus["SEE_OTHER"] = 303] = "SEE_OTHER";
    HttpStatus[HttpStatus["NOT_MODIFIED"] = 304] = "NOT_MODIFIED";
    HttpStatus[HttpStatus["TEMPORARY_REDIRECT"] = 307] = "TEMPORARY_REDIRECT";
    HttpStatus[HttpStatus["PERMANENT_REDIRECT"] = 308] = "PERMANENT_REDIRECT";
    HttpStatus[HttpStatus["BAD_REQUEST"] = 400] = "BAD_REQUEST";
    HttpStatus[HttpStatus["UNAUTHORIZED"] = 401] = "UNAUTHORIZED";
    HttpStatus[HttpStatus["PAYMENT_REQUIRED"] = 402] = "PAYMENT_REQUIRED";
    HttpStatus[HttpStatus["FORBIDDEN"] = 403] = "FORBIDDEN";
    HttpStatus[HttpStatus["NOT_FOUND"] = 404] = "NOT_FOUND";
    HttpStatus[HttpStatus["METHOD_NOT_ALLOWED"] = 405] = "METHOD_NOT_ALLOWED";
    HttpStatus[HttpStatus["NOT_ACCEPTABLE"] = 406] = "NOT_ACCEPTABLE";
    HttpStatus[HttpStatus["PROXY_AUTHENTICATION_REQUIRED"] = 407] = "PROXY_AUTHENTICATION_REQUIRED";
    HttpStatus[HttpStatus["REQUEST_TIMEOUT"] = 408] = "REQUEST_TIMEOUT";
    HttpStatus[HttpStatus["CONFLICT"] = 409] = "CONFLICT";
    HttpStatus[HttpStatus["GONE"] = 410] = "GONE";
    HttpStatus[HttpStatus["LENGTH_REQUIRED"] = 411] = "LENGTH_REQUIRED";
    HttpStatus[HttpStatus["PRECONDITION_FAILED"] = 412] = "PRECONDITION_FAILED";
    HttpStatus[HttpStatus["PAYLOAD_TOO_LARGE"] = 413] = "PAYLOAD_TOO_LARGE";
    HttpStatus[HttpStatus["URI_TOO_LONG"] = 414] = "URI_TOO_LONG";
    HttpStatus[HttpStatus["UNSUPPORTED_MEDIA_TYPE"] = 415] = "UNSUPPORTED_MEDIA_TYPE";
    HttpStatus[HttpStatus["REQUESTED_RANGE_NOT_SATISFIABLE"] = 416] = "REQUESTED_RANGE_NOT_SATISFIABLE";
    HttpStatus[HttpStatus["EXPECTATION_FAILED"] = 417] = "EXPECTATION_FAILED";
    HttpStatus[HttpStatus["I_AM_A_TEAPOT"] = 418] = "I_AM_A_TEAPOT";
    HttpStatus[HttpStatus["MISDIRECTED"] = 421] = "MISDIRECTED";
    HttpStatus[HttpStatus["UNPROCESSABLE_ENTITY"] = 422] = "UNPROCESSABLE_ENTITY";
    HttpStatus[HttpStatus["FAILED_DEPENDENCY"] = 424] = "FAILED_DEPENDENCY";
    HttpStatus[HttpStatus["PRECONDITION_REQUIRED"] = 428] = "PRECONDITION_REQUIRED";
    HttpStatus[HttpStatus["TOO_MANY_REQUESTS"] = 429] = "TOO_MANY_REQUESTS";
    HttpStatus[HttpStatus["INTERNAL_SERVER_ERROR"] = 500] = "INTERNAL_SERVER_ERROR";
    HttpStatus[HttpStatus["NOT_IMPLEMENTED"] = 501] = "NOT_IMPLEMENTED";
    HttpStatus[HttpStatus["BAD_GATEWAY"] = 502] = "BAD_GATEWAY";
    HttpStatus[HttpStatus["SERVICE_UNAVAILABLE"] = 503] = "SERVICE_UNAVAILABLE";
    HttpStatus[HttpStatus["GATEWAY_TIMEOUT"] = 504] = "GATEWAY_TIMEOUT";
    HttpStatus[HttpStatus["HTTP_VERSION_NOT_SUPPORTED"] = 505] = "HTTP_VERSION_NOT_SUPPORTED";
    HttpStatus[HttpStatus["errorMessage"] = 506] = "errorMessage";
})(HttpStatus = exports.HttpStatus || (exports.HttpStatus = {}));
var ModelScopes;
(function (ModelScopes) {
    ModelScopes["WITH_SENSITIVE"] = "WITH_SENSITIVE";
    ModelScopes["ALL"] = "ALL";
})(ModelScopes = exports.ModelScopes || (exports.ModelScopes = {}));
var ResponseMessages;
(function (ResponseMessages) {
    ResponseMessages["USER_IS_SIGNED_UP"] = "You are successfully signed up.";
    ResponseMessages["USER_IS_LOGGED_IN"] = "You are successfully logged in.";
    ResponseMessages["USER_IS_LOGGED_OUT"] = "You are successfully logged out.";
    ResponseMessages["USER_DATA_IS_CHANGED"] = "User data is successfully changed";
    ResponseMessages["INCORRECT_PASSWORD"] = "Incorrect password.";
    ResponseMessages["USER_EXISTS"] = "User exists.";
    ResponseMessages["USER_DOES_NOT_EXIST"] = "User does not exist.";
})(ResponseMessages = exports.ResponseMessages || (exports.ResponseMessages = {}));
var ErrorMessages;
(function (ErrorMessages) {
    ErrorMessages["APPLICATION_ERROR"] = "Application error.";
    ErrorMessages["UNKNOWN_ERROR"] = "Unknown error.";
    ErrorMessages["NAMES_LENGHT_VALIDATION"] = "First, middle and last names' length should be in a range of 2 and 25 charachters.";
    ErrorMessages["REQUIRED_FIELDS_VALIDATION"] = "Please, fill in required fields.";
    ErrorMessages["EMAIL_VALIDATION"] = "Please, provide a valid email address.";
    ErrorMessages["UNIQUE_EMAIL_VALIDATION"] = "Account with the provided email address already exists.";
    ErrorMessages["PASSWORD_LENGTH_VALIDATION"] = "Password charachters' length should be in a range of 8 and 50 charachters.";
    ErrorMessages["PASSWORDS_DO_NOT_MATCH"] = "Passwords do not match.";
    ErrorMessages["USERNAME_OR_PASSWORD_INCORRECT"] = "Incorrect username or password.";
    ErrorMessages["USER_NOT_FOUND"] = "User is not found.";
    ErrorMessages["NOT_AUTHORIZED"] = "Please, authorize.";
    ErrorMessages["USER_IS_DELETED"] = "We will miss you :/";
    ErrorMessages["NOT_ENOUGH_RIGHTS"] = "Not enough rights.";
})(ErrorMessages = exports.ErrorMessages || (exports.ErrorMessages = {}));
var ResponseStatus;
(function (ResponseStatus) {
    ResponseStatus["SUCCESS"] = "Success.";
    ResponseStatus["FAILURE"] = "Failure.";
    ResponseStatus["ERROR"] = "Unknown error.";
})(ResponseStatus = exports.ResponseStatus || (exports.ResponseStatus = {}));
var NodeEnvs;
(function (NodeEnvs) {
    NodeEnvs["PRODUCTION"] = "production";
    NodeEnvs["DEVELOPMENT"] = "development";
    NodeEnvs["TEST"] = "test";
})(NodeEnvs = exports.NodeEnvs || (exports.NodeEnvs = {}));
var PassportStrategies;
(function (PassportStrategies) {
    PassportStrategies["LOCAL"] = "local";
    PassportStrategies["JWT"] = "jwt";
})(PassportStrategies = exports.PassportStrategies || (exports.PassportStrategies = {}));
var Routes;
(function (Routes) {
    Routes["AUTH"] = "/api/v1/auth";
    Routes["USER"] = "/api/v1/users";
})(Routes = exports.Routes || (exports.Routes = {}));
